# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashMapConstructor
# Parameters: (capacity = 10, readFromCollection = false)

# Run progress: 0.00% complete, ETA 00:02:24
# Fork: 1 of 3
# Warmup Iteration   1: 181.073 ns/op
# Warmup Iteration   2: 166.010 ns/op
# Warmup Iteration   3: 168.541 ns/op
Iteration   1: 167.290 ns/op
Iteration   2: 168.426 ns/op
Iteration   3: 166.598 ns/op

# Run progress: 4.17% complete, ETA 00:02:24
# Fork: 2 of 3
# Warmup Iteration   1: 180.204 ns/op
# Warmup Iteration   2: 172.715 ns/op
# Warmup Iteration   3: 169.461 ns/op
Iteration   1: 167.604 ns/op
Iteration   2: 166.146 ns/op
Iteration   3: 176.191 ns/op

# Run progress: 8.33% complete, ETA 00:02:17
# Fork: 3 of 3
# Warmup Iteration   1: 186.858 ns/op
# Warmup Iteration   2: 172.502 ns/op
# Warmup Iteration   3: 165.222 ns/op
Iteration   1: 171.590 ns/op
Iteration   2: 169.994 ns/op
Iteration   3: 164.618 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashMapConstructor":
  168.717 ±(99.9%) 5.852 ns/op [Average]
  (min, avg, max) = (164.618, 168.717, 176.191), stdev = 3.482
  CI (99.9%): [162.866, 174.569] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashMapConstructor
# Parameters: (capacity = 100, readFromCollection = false)

# Run progress: 12.50% complete, ETA 00:02:11
# Fork: 1 of 3
# Warmup Iteration   1: 2292.353 ns/op
# Warmup Iteration   2: 1969.163 ns/op
# Warmup Iteration   3: 1993.259 ns/op
Iteration   1: 2012.843 ns/op
Iteration   2: 2041.607 ns/op
Iteration   3: 1991.083 ns/op

# Run progress: 16.67% complete, ETA 00:02:05
# Fork: 2 of 3
# Warmup Iteration   1: 2440.663 ns/op
# Warmup Iteration   2: 2074.873 ns/op
# Warmup Iteration   3: 2048.222 ns/op
Iteration   1: 2059.903 ns/op
Iteration   2: 2056.106 ns/op
Iteration   3: 2021.066 ns/op

# Run progress: 20.83% complete, ETA 00:01:58
# Fork: 3 of 3
# Warmup Iteration   1: 2294.235 ns/op
# Warmup Iteration   2: 2008.362 ns/op
# Warmup Iteration   3: 1982.363 ns/op
Iteration   1: 1940.168 ns/op
Iteration   2: 1952.338 ns/op
Iteration   3: 1932.890 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashMapConstructor":
  2000.889 ±(99.9%) 82.973 ns/op [Average]
  (min, avg, max) = (1932.890, 2000.889, 2059.903), stdev = 49.376
  CI (99.9%): [1917.917, 2083.862] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashMapFactory
# Parameters: (capacity = 10, readFromCollection = false)

# Run progress: 25.00% complete, ETA 00:01:52
# Fork: 1 of 3
# Warmup Iteration   1: 177.507 ns/op
# Warmup Iteration   2: 167.680 ns/op
# Warmup Iteration   3: 170.563 ns/op
Iteration   1: 170.745 ns/op
Iteration   2: 172.979 ns/op
Iteration   3: 172.104 ns/op

# Run progress: 29.17% complete, ETA 00:01:46
# Fork: 2 of 3
# Warmup Iteration   1: 188.162 ns/op
# Warmup Iteration   2: 171.315 ns/op
# Warmup Iteration   3: 171.199 ns/op
Iteration   1: 171.543 ns/op
Iteration   2: 175.377 ns/op
Iteration   3: 172.201 ns/op

# Run progress: 33.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 180.538 ns/op
# Warmup Iteration   2: 171.190 ns/op
# Warmup Iteration   3: 168.331 ns/op
Iteration   1: 171.423 ns/op
Iteration   2: 168.919 ns/op
Iteration   3: 169.079 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashMapFactory":
  171.597 ±(99.9%) 3.313 ns/op [Average]
  (min, avg, max) = (168.919, 171.597, 175.377), stdev = 1.971
  CI (99.9%): [168.284, 174.909] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashMapFactory
# Parameters: (capacity = 100, readFromCollection = false)

# Run progress: 37.50% complete, ETA 00:01:33
# Fork: 1 of 3
# Warmup Iteration   1: 1889.680 ns/op
# Warmup Iteration   2: 1643.849 ns/op
# Warmup Iteration   3: 1748.371 ns/op
Iteration   1: 1710.472 ns/op
Iteration   2: 1750.751 ns/op
Iteration   3: 1722.205 ns/op

# Run progress: 41.67% complete, ETA 00:01:27
# Fork: 2 of 3
# Warmup Iteration   1: 1898.550 ns/op
# Warmup Iteration   2: 1638.941 ns/op
# Warmup Iteration   3: 1729.004 ns/op
Iteration   1: 1719.170 ns/op
Iteration   2: 1753.976 ns/op
Iteration   3: 1727.612 ns/op

# Run progress: 45.83% complete, ETA 00:01:21
# Fork: 3 of 3
# Warmup Iteration   1: 1958.057 ns/op
# Warmup Iteration   2: 1764.450 ns/op
# Warmup Iteration   3: 1795.771 ns/op
Iteration   1: 1778.365 ns/op
Iteration   2: 1832.996 ns/op
Iteration   3: 1827.208 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashMapFactory":
  1758.084 ±(99.9%) 77.165 ns/op [Average]
  (min, avg, max) = (1710.472, 1758.084, 1832.996), stdev = 45.920
  CI (99.9%): [1680.919, 1835.249] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashSetConstructor
# Parameters: (capacity = 10, readFromCollection = false)

# Run progress: 50.00% complete, ETA 00:01:15
# Fork: 1 of 3
# Warmup Iteration   1: 223.517 ns/op
# Warmup Iteration   2: 219.097 ns/op
# Warmup Iteration   3: 202.821 ns/op
Iteration   1: 206.360 ns/op
Iteration   2: 209.528 ns/op
Iteration   3: 202.921 ns/op

# Run progress: 54.17% complete, ETA 00:01:08
# Fork: 2 of 3
# Warmup Iteration   1: 224.518 ns/op
# Warmup Iteration   2: 205.970 ns/op
# Warmup Iteration   3: 205.972 ns/op
Iteration   1: 205.254 ns/op
Iteration   2: 208.017 ns/op
Iteration   3: 206.908 ns/op

# Run progress: 58.33% complete, ETA 00:01:02
# Fork: 3 of 3
# Warmup Iteration   1: 235.042 ns/op
# Warmup Iteration   2: 209.186 ns/op
# Warmup Iteration   3: 205.817 ns/op
Iteration   1: 206.552 ns/op
Iteration   2: 204.899 ns/op
Iteration   3: 203.245 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashSetConstructor":
  205.965 ±(99.9%) 3.594 ns/op [Average]
  (min, avg, max) = (202.921, 205.965, 209.528), stdev = 2.139
  CI (99.9%): [202.371, 209.559] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashSetConstructor
# Parameters: (capacity = 100, readFromCollection = false)

# Run progress: 62.50% complete, ETA 00:00:56
# Fork: 1 of 3
# Warmup Iteration   1: 2986.500 ns/op
# Warmup Iteration   2: 2630.110 ns/op
# Warmup Iteration   3: 2548.698 ns/op
Iteration   1: 2547.141 ns/op
Iteration   2: 2613.257 ns/op
Iteration   3: 2533.167 ns/op

# Run progress: 66.67% complete, ETA 00:00:50
# Fork: 2 of 3
# Warmup Iteration   1: 2961.736 ns/op
# Warmup Iteration   2: 2572.737 ns/op
# Warmup Iteration   3: 2543.871 ns/op
Iteration   1: 2635.953 ns/op
Iteration   2: 2591.653 ns/op
Iteration   3: 2542.552 ns/op

# Run progress: 70.83% complete, ETA 00:00:43
# Fork: 3 of 3
# Warmup Iteration   1: 3014.839 ns/op
# Warmup Iteration   2: 2627.570 ns/op
# Warmup Iteration   3: 2567.332 ns/op
Iteration   1: 2559.005 ns/op
Iteration   2: 2563.519 ns/op
Iteration   3: 2542.170 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashSetConstructor":
  2569.824 ±(99.9%) 60.178 ns/op [Average]
  (min, avg, max) = (2533.167, 2569.824, 2635.953), stdev = 35.811
  CI (99.9%): [2509.646, 2630.003] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashSetFactory
# Parameters: (capacity = 10, readFromCollection = false)

# Run progress: 75.00% complete, ETA 00:00:37
# Fork: 1 of 3
# Warmup Iteration   1: 225.379 ns/op
# Warmup Iteration   2: 210.499 ns/op
# Warmup Iteration   3: 207.575 ns/op
Iteration   1: 206.586 ns/op
Iteration   2: 208.383 ns/op
Iteration   3: 205.797 ns/op

# Run progress: 79.17% complete, ETA 00:00:31
# Fork: 2 of 3
# Warmup Iteration   1: 230.396 ns/op
# Warmup Iteration   2: 206.848 ns/op
# Warmup Iteration   3: 205.985 ns/op
Iteration   1: 204.563 ns/op
Iteration   2: 207.717 ns/op
Iteration   3: 205.920 ns/op

# Run progress: 83.33% complete, ETA 00:00:25
# Fork: 3 of 3
# Warmup Iteration   1: 229.819 ns/op
# Warmup Iteration   2: 214.902 ns/op
# Warmup Iteration   3: 208.428 ns/op
Iteration   1: 208.299 ns/op
Iteration   2: 210.897 ns/op
Iteration   3: 209.804 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashSetFactory":
  207.552 ±(99.9%) 3.420 ns/op [Average]
  (min, avg, max) = (204.563, 207.552, 210.897), stdev = 2.035
  CI (99.9%): [204.131, 210.972] (assumes normal distribution)


# JMH version: 1.35
# VM version: JDK 19, OpenJDK 64-Bit Server VM, 19+35-2237
# VM invoker: /Library/Java/JavaVirtualMachines/jdk-19.jdk/Contents/Home/bin/java
# VM options: -Xmx2g -XX:+UseG1GC
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 3 iterations, 1 s each
# Measurement: 3 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.sample.BenchmarkPreAllocated.testHashSetFactory
# Parameters: (capacity = 100, readFromCollection = false)

# Run progress: 87.50% complete, ETA 00:00:18
# Fork: 1 of 3
# Warmup Iteration   1: 2479.778 ns/op
# Warmup Iteration   2: 2173.370 ns/op
# Warmup Iteration   3: 2208.388 ns/op
Iteration   1: 2134.150 ns/op
Iteration   2: 2152.407 ns/op
Iteration   3: 2154.004 ns/op

# Run progress: 91.67% complete, ETA 00:00:12
# Fork: 2 of 3
# Warmup Iteration   1: 2476.356 ns/op
# Warmup Iteration   2: 2180.958 ns/op
# Warmup Iteration   3: 2125.784 ns/op
Iteration   1: 2124.818 ns/op
Iteration   2: 2143.782 ns/op
Iteration   3: 2135.351 ns/op

# Run progress: 95.83% complete, ETA 00:00:06
# Fork: 3 of 3
# Warmup Iteration   1: 2493.303 ns/op
# Warmup Iteration   2: 2185.867 ns/op
# Warmup Iteration   3: 2150.713 ns/op
Iteration   1: 2138.194 ns/op
Iteration   2: 2150.531 ns/op
Iteration   3: 2155.877 ns/op


Result "org.sample.BenchmarkPreAllocated.testHashSetFactory":
  2143.235 ±(99.9%) 18.048 ns/op [Average]
  (min, avg, max) = (2124.818, 2143.235, 2155.877), stdev = 10.740
  CI (99.9%): [2125.187, 2161.282] (assumes normal distribution)


# Run complete. Total time: 00:02:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                     (capacity)  (readFromCollection)  Mode  Cnt     Score    Error  Units
BenchmarkPreAllocated.testHashMapConstructor          10                 false  avgt    9   168.717 ±  5.852  ns/op
BenchmarkPreAllocated.testHashMapFactory              10                 false  avgt    9   171.597 ±  3.313  ns/op
BenchmarkPreAllocated.testHashMapConstructor         100                 false  avgt    9  2000.889 ± 82.973  ns/op
BenchmarkPreAllocated.testHashMapFactory             100                 false  avgt    9  1758.084 ± 77.165  ns/op
BenchmarkPreAllocated.testHashSetConstructor          10                 false  avgt    9   205.965 ±  3.594  ns/op
BenchmarkPreAllocated.testHashSetFactory              10                 false  avgt    9   207.552 ±  3.420  ns/op
BenchmarkPreAllocated.testHashSetConstructor         100                 false  avgt    9  2569.824 ± 60.178  ns/op
BenchmarkPreAllocated.testHashSetFactory             100                 false  avgt    9  2143.235 ± 18.048  ns/op
